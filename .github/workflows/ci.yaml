name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

permissions:
  contents: read

jobs:
  format:
    name: Format
    runs-on: ubicloud-standard-2
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Setup Python
        uses: ./.github/actions/setup-python

      - name: Install formatters
        uses: jdx/mise-action@5ac50f778e26fac95da98d50503682459e86d566 # v3
        with:
          install: true
          cache: true
          install_args: "\"cargo:taplo-cli\" dprint"

      - name: Run formatters
        run: |
          mise format:ci

  lint:
    name: Lint
    runs-on: ubicloud-standard-2
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Setup Python
        uses: ./.github/actions/setup-python

      - name: Install linters
        uses: jdx/mise-action@5ac50f778e26fac95da98d50503682459e86d566 # v3
        with:
          install: true
          cache: true
          install_args: "\"cargo:taplo-cli\""

      - name: Run linters
        run: |
          mise lint:ci --continue-on-error

  type-check:
    name: Type Check
    runs-on: ubicloud-standard-2
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Setup Python
        uses: ./.github/actions/setup-python

      - name: Run Fast Type Check
        run: mise typecheck:ty

      - name: Add .venv/bin to PATH
        run: echo "$PWD/.venv/bin" >> $GITHUB_PATH

      - name: Run Slow Type Check
        uses: jakebailey/pyright-action@6cabc0f01c4994be48fd45cd9dbacdd6e1ee6e5e # v2
        with:
          version: PATH
          project: ./pyrightconfig.json

  test:
    name: Test
    runs-on: ubicloud-standard-2
    permissions:
      pull-requests: write
      issues: write
      contents: read

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Setup Python
        uses: ./.github/actions/setup-python

      - name: Run fast tests
        if: ${{ github.event_name == 'pull_request'}}
        run: |
          uv run pytest -q --junit-xml=results/pytest-junit.xml -m "not slow"

      - name: Create test summary
        uses: test-summary/action@31493c76ec9e7aa675f1585d3ed6f1da69269a86 # v2
        with:
          show: "all"
          paths: results/pytest-junit.xml
          output: pytest-summary.md
        if: ${{ github.event_name == 'pull_request' && !cancelled() }}

      - name: Wrap test summary in details
        if: ${{ github.event_name == 'pull_request' && !cancelled() }}
        run: |
          echo "<details>" > pytest-summary-wrapped.md
          echo "" >> pytest-summary-wrapped.md
          echo "<summary>Fast Test Results</summary>" >> pytest-summary-wrapped.md
          echo "" >> pytest-summary-wrapped.md
          cat pytest-summary.md >> pytest-summary-wrapped.md
          echo "" >> pytest-summary-wrapped.md
          echo "</details>" >> pytest-summary-wrapped.md
          mv pytest-summary-wrapped.md pytest-summary.md

      - name: Update PR with fast test results
        uses: ./.github/actions/find-update-or-create-comment
        if: ${{ github.event_name == 'pull_request' && !cancelled() }}
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body-includes: "Test Results"
          comment-author: "github-actions[bot]"
          body-path: pytest-summary.md
          edit-mode: replace

      - name: Run slow tests (original snapshots)
        id: slow-tests-original
        run: |
          uv run pytest -q --junit-xml=results/pytest-slow-junit.xml -m "slow"
        if: ${{ github.event_name == 'pull_request' && !cancelled() }}

      - name: Create test summary
        uses: test-summary/action@31493c76ec9e7aa675f1585d3ed6f1da69269a86 # v2
        with:
          show: "all"
          paths: results/pytest-slow-junit.xml
          output: pytest-slow-summary.md
        if: ${{ github.event_name == 'pull_request' && !cancelled() }}

      - name: Wrap slow test summary in details
        if: ${{ github.event_name == 'pull_request' && !cancelled() }}
        run: |
          echo "<details>" > pytest-slow-summary-wrapped.md
          echo "" >> pytest-slow-summary-wrapped.md
          echo "<summary>Slow Test Results</summary>" >> pytest-slow-summary-wrapped.md
          echo "" >> pytest-slow-summary-wrapped.md
          cat pytest-slow-summary.md >> pytest-slow-summary-wrapped.md
          echo "" >> pytest-slow-summary-wrapped.md
          echo "</details>" >> pytest-slow-summary-wrapped.md
          mv pytest-slow-summary-wrapped.md pytest-slow-summary.md

      - name: Combine test summaries
        if: ${{ github.event_name == 'pull_request' && !cancelled() }}
        run: |
          echo "# Test Results" > combined-test-summary.md
          echo "" >> combined-test-summary.md
          cat pytest-summary.md >> combined-test-summary.md
          echo "" >> combined-test-summary.md
          cat pytest-slow-summary.md >> combined-test-summary.md

      - name: Update PR with combined test results
        uses: ./.github/actions/find-update-or-create-comment
        if: ${{ github.event_name == 'pull_request' && !cancelled() }}
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body-includes: "Test Results"
          comment-author: "github-actions[bot]"
          body-path: combined-test-summary.md
          edit-mode: replace

      - name: Copy original snapshots for comparison
        if: ${{ github.event_name == 'pull_request' && !cancelled() && steps.slow-tests-original.outcome == 'failure' }}
        run: |
          mkdir -p original-snapshots
          cp tests/map/__snapshots__/test_visual/*.png original-snapshots/

      - name: Run slow tests with snapshot update (only failed tests)
        id: slow-tests-updated
        run: |
          uv run pytest -q --junit-xml=results/pytest-slow-updated-junit.xml --last-failed --snapshot-update
        if: ${{ github.event_name == 'pull_request' && !cancelled() && steps.slow-tests-original.outcome == 'failure' }}

      - name: Upload images to imgur and create comparison comment
        if: ${{ github.event_name == 'pull_request' && !cancelled() && steps.slow-tests-original.outcome == 'failure' }}
        run: |
          echo "# ðŸ“¸ Visual Test Snapshots Comparison" > visual-snapshots-comment.md
          echo "" >> visual-snapshots-comment.md
          echo "Generated image snapshots from visual tests - showing original vs updated:" >> visual-snapshots-comment.md
          echo "" >> visual-snapshots-comment.md

          # Function to upload image to imgur and get URL
          upload_to_imgur() {
            local image_path="$1"
            local response=$(curl -s -X POST \
              -H "Authorization: Client-ID 546c25a59c58ad7" \
              -F "image=@$image_path" \
              https://api.imgur.com/3/image)
            echo "$response" | jq -r '.data.link'
          }

          echo "## Munich Boundary Basemap Overlays" >> visual-snapshots-comment.md
          echo "" >> visual-snapshots-comment.md

          echo "### Munich Boundary Basemap Overlay" >> visual-snapshots-comment.md
          echo "| Original | Updated |" >> visual-snapshots-comment.md
          echo "|----------|---------|" >> visual-snapshots-comment.md

          # Upload original and updated images to imgur
          ORIGINAL_URL=$(upload_to_imgur "original-snapshots/TestMunichBasemap.test_munich_boundary_basemap_overlay.png")
          UPDATED_URL=$(upload_to_imgur "tests/map/__snapshots__/test_visual/TestMunichBasemap.test_munich_boundary_basemap_overlay.png")
          echo "| ![Original]($ORIGINAL_URL) | ![Updated]($UPDATED_URL) |" >> visual-snapshots-comment.md
          echo "" >> visual-snapshots-comment.md

          echo "### Munich Boundary Different Providers" >> visual-snapshots-comment.md
          echo "| Original | Updated |" >> visual-snapshots-comment.md
          echo "|----------|---------|" >> visual-snapshots-comment.md

          # Upload different providers images
          ORIGINAL_PROVIDERS_URL=$(upload_to_imgur "original-snapshots/TestMunichBasemap.test_munich_boundary_different_providers.png")
          UPDATED_PROVIDERS_URL=$(upload_to_imgur "tests/map/__snapshots__/test_visual/TestMunichBasemap.test_munich_boundary_different_providers.png")
          echo "| ![Original]($ORIGINAL_PROVIDERS_URL) | ![Updated]($UPDATED_PROVIDERS_URL) |" >> visual-snapshots-comment.md
          echo "" >> visual-snapshots-comment.md

          echo "## Individual Transit Systems" >> visual-snapshots-comment.md
          echo "" >> visual-snapshots-comment.md

          echo "### U-Bahn (Subway) System" >> visual-snapshots-comment.md
          echo "| Original | Updated |" >> visual-snapshots-comment.md
          echo "|----------|---------|" >> visual-snapshots-comment.md

          # Upload subway images
          ORIGINAL_SUBWAY_URL=$(upload_to_imgur "original-snapshots/TestMunichTransitSystems.test_munich_subway_system.png")
          UPDATED_SUBWAY_URL=$(upload_to_imgur "tests/map/__snapshots__/test_visual/TestMunichTransitSystems.test_munich_subway_system.png")
          echo "| ![Original]($ORIGINAL_SUBWAY_URL) | ![Updated]($UPDATED_SUBWAY_URL) |" >> visual-snapshots-comment.md
          echo "" >> visual-snapshots-comment.md

          echo "### Tram System" >> visual-snapshots-comment.md
          echo "| Original | Updated |" >> visual-snapshots-comment.md
          echo "|----------|---------|" >> visual-snapshots-comment.md

          # Upload tram images
          ORIGINAL_TRAM_URL=$(upload_to_imgur "original-snapshots/TestMunichTransitSystems.test_munich_tram_system.png")
          UPDATED_TRAM_URL=$(upload_to_imgur "tests/map/__snapshots__/test_visual/TestMunichTransitSystems.test_munich_tram_system.png")
          echo "| ![Original]($ORIGINAL_TRAM_URL) | ![Updated]($UPDATED_TRAM_URL) |" >> visual-snapshots-comment.md
          echo "" >> visual-snapshots-comment.md

          echo "### S-Bahn (Commuter Rail) System" >> visual-snapshots-comment.md
          echo "| Original | Updated |" >> visual-snapshots-comment.md
          echo "|----------|---------|" >> visual-snapshots-comment.md

          # Upload commuter rail images
          ORIGINAL_COMMUTER_URL=$(upload_to_imgur "original-snapshots/TestMunichTransitSystems.test_munich_commuter_rail_system.png")
          UPDATED_COMMUTER_URL=$(upload_to_imgur "tests/map/__snapshots__/test_visual/TestMunichTransitSystems.test_munich_commuter_rail_system.png")
          echo "| ![Original]($ORIGINAL_COMMUTER_URL) | ![Updated]($UPDATED_COMMUTER_URL) |" >> visual-snapshots-comment.md
          echo "" >> visual-snapshots-comment.md

          echo "## Complete Transit System Overlays" >> visual-snapshots-comment.md
          echo "" >> visual-snapshots-comment.md

          echo "### CartoDB Positron Basemap" >> visual-snapshots-comment.md
          echo "| Original | Updated |" >> visual-snapshots-comment.md
          echo "|----------|---------|" >> visual-snapshots-comment.md

          # Upload complete system images
          ORIGINAL_COMPLETE_URL=$(upload_to_imgur "original-snapshots/TestMunichCompleteSystem.test_munich_complete_transit_system.png")
          UPDATED_COMPLETE_URL=$(upload_to_imgur "tests/map/__snapshots__/test_visual/TestMunichCompleteSystem.test_munich_complete_transit_system.png")
          echo "| ![Original]($ORIGINAL_COMPLETE_URL) | ![Updated]($UPDATED_COMPLETE_URL) |" >> visual-snapshots-comment.md
          echo "" >> visual-snapshots-comment.md

          echo "### CartoDB Voyager Basemap" >> visual-snapshots-comment.md
          echo "| Original | Updated |" >> visual-snapshots-comment.md
          echo "|----------|---------|" >> visual-snapshots-comment.md

          # Upload voyager images
          ORIGINAL_VOYAGER_URL=$(upload_to_imgur "original-snapshots/TestMunichCompleteSystem.test_munich_complete_transit_system_voyager.png")
          UPDATED_VOYAGER_URL=$(upload_to_imgur "tests/map/__snapshots__/test_visual/TestMunichCompleteSystem.test_munich_complete_transit_system_voyager.png")
          echo "| ![Original]($ORIGINAL_VOYAGER_URL) | ![Updated]($UPDATED_VOYAGER_URL) |" >> visual-snapshots-comment.md

      - name: Update Comment with visual snapshots (comparison mode)
        uses: ./.github/actions/find-update-or-create-comment
        if: ${{ github.event_name == 'pull_request' && !cancelled() && steps.slow-tests-original.outcome == 'failure' }}
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body-includes: "Visual Test Snapshots"
          comment-author: "github-actions[bot]"
          body-path: visual-snapshots-comment.md
          edit-mode: replace

      - name: Mark visual snapshots comment as outdated (when tests succeed)
        if: ${{ github.event_name == 'pull_request' && !cancelled() && steps.slow-tests-original.outcome == 'success' }}
        run: |
          # Find the existing visual snapshots comment and mark it as outdated
          COMMENT_ID=$(gh api repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/comments \
            --jq '.[] | select(.user.login == "github-actions[bot]" and (.body | contains("Visual Test Snapshots"))) | .id' | head -1)

          if [ ! -z "$COMMENT_ID" ]; then
            echo "Marking comment $COMMENT_ID as outdated"
            gh api repos/${{ github.repository }}/issues/comments/$COMMENT_ID \
              --method PATCH \
              --field body="~~$(gh api repos/${{ github.repository }}/issues/comments/$COMMENT_ID --jq '.body')~~" \
              --field outdated=true
          else
            echo "No existing visual snapshots comment found to mark as outdated"
          fi
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Run tests with coverage
        if: ${{ !cancelled() }}
        run: |
          uv run pytest --cov=core --cov-report=term-missing

  build:
    name: Build
    runs-on: ubicloud-standard-2
    needs: [lint, type-check, test]
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Setup Python
        uses: ./.github/actions/setup-python

      - name: Build package
        run: |
          uv build

      - name: Upload artifacts
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: dist
          path: dist/
